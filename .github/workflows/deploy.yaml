name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code (for access to docker-compose-reverseproxy.yaml and nginx.conf)
        uses: actions/checkout@v4

      - name: Copy nginx.conf to Digital Ocean Droplet
        uses: appleboy/scp-action@v0.1.7
        with:
          source: "docker-compose-reverseproxy.yaml,nginx.conf"
          target: /home/${{ secrets.DROPLET_USER}}/
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: 22
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker compose -f docker-compose-reverseproxy.yaml up -d

      - name: List and remove non-latest images in Digital Ocean Droplet
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: 22
          script: |
            images=$(docker images --format '{{.Repository}}:{{.Tag}} {{.ID}}' | grep -v ':latest')
            echo "Images to be removed:"
            echo "$images"

            while IFS= read -r image; do
             repo_tag=$(echo $image | awk '{print $1}')
             image_id=$(echo $image | awk '{print $2}')
             echo "Removing image $repo_tag with ID $image_id"
             docker rmi "$image_id" || true
            done <<< "$images"
